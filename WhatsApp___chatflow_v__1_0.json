{
  "name": "WhatsApp + chatflow v. 1.0",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c8807c78-6968-41ce-8836-ff2e9cdf1fe4",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -160,
        260
      ],
      "id": "deee108f-b0b5-4777-b59f-b7003dbe827a",
      "name": "Webhook",
      "webhookId": "c8807c78-6968-41ce-8836-ff2e9cdf1fe4"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"message\": \"={{ $json['body']['message'] }}\",\n    \"sender\": \"={{ $json['body']['metadata']['remoteJid'] }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        40,
        260
      ],
      "id": "4d571c2a-0b4f-4f95-a514-3741f8427352",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  try {\n    // Выводим содержимое output для отладки\n    console.log(\"Raw output:\", item.json.output);\n\n    // Удаляем ```json и ```, а также лишние пробелы\n    let cleanedOutput = item.json.output\n      .replace(/```json\\n|\\n```/g, '') // Удаляем ```json и ```\n      .trim(); // Удаляем пробелы в начале и конце\n\n    // Удаляем лишнюю закрывающую скобку, если она есть\n    if (cleanedOutput.endsWith(\"}}\")) {\n      cleanedOutput = cleanedOutput.slice(0, -1); // Удаляем последнюю }\n    }\n\n    // Парсим очищенную строку JSON\n    const parsedOutput = JSON.parse(cleanedOutput);\n\n    // Формируем результат\n    return {\n      json: {\n        response: parsedOutput.response, // Используем response из AI Agent\n        sender: parsedOutput.sender.replace(/^=/, ''), // Удаляем знак = в начале строки\n        token: parsedOutput.token,\n        instance_id: parsedOutput.instance_id,\n        options: {\n          keepOnlySet: true\n        }\n      }\n    };\n  } catch (error) {\n    // Выводим ошибку для отладки\n    console.error(\"JSON Parse Error:\", error.message);\n    console.error(\"Problematic output:\", item.json.output);\n    \n    // Возвращаем объект с ошибкой\n    return {\n      json: {\n        error: \"Failed to parse JSON\",\n        rawOutput: item.json.output\n      }\n    };\n  }\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        260
      ],
      "id": "458cd747-3ae6-47a5-b6e7-e6c63ad4e272",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "https://app.chatflow.kz/api/v1/send-text",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "={{ $json.token }}"
            },
            {
              "name": "instance_id",
              "value": "={{ $json.instance_id }}"
            },
            {
              "name": "jid",
              "value": "={{ $json.sender }}"
            },
            {
              "name": "msg",
              "value": "={{ $json.response }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        260
      ],
      "id": "0a19d322-efd0-4fb9-9788-845fb6361f8d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Клиент написал: \"{{ $json.message }}\".\nРоль: Вы — опытный консультант по пластиковым окнам, работающий в компании \"Окна в Будущее\". Ваша задача — помогать клиентам выбирать оптимальные решения для их домов, предоставлять информацию о ценах и услугах, а также оформлять заказы на установку окон.\n\nТон общения: Дружелюбный, профессиональный, информативный.\n\nИнформация о компании \"Окна в Будущее\":\n\nНазвание: Окна в Будущее\nСпециализация: Изготовление и установка пластиковых окон любой сложности.\nПреимущества:\nВысокое качество материалов (профиль Rehau, фурнитура Siegenia).\nШирокий выбор цветов и конфигураций.\nПрофессиональный монтаж с гарантией 5 лет.\nБесплатный замер и консультация.\nСкидки и акции для новых клиентов.\nКонтактная информация:\nТелефон: +1-555-123-4567\nEmail: info@oknavbudushee.com\nСайт: www.oknavbudushee.com\nУслуги и цены (в долларах США):\n\nСтандартное окно (120x120 см, двухкамерный стеклопакет):\nОкно: $300\nУстановка: $100\nИтого: $400\nБалконная дверь (210x70 см, двухкамерный стеклопакет):\nДверь: $450\nУстановка: $150\nИтого: $600\nОкно с энергосберегающим стеклопакетом (120x120 см):\nОкно: $380\nУстановка: $100\nИтого: $480\nОкно с тонировкой (120x120 см):\nОкно: $350\nУстановка: $100\nИтого: $450\nДополнительные услуги:\nЗамер: Бесплатно\nДемонтаж старого окна: $50\nОтделка откосов: $80 за погонный метр\nВывоз мусора: $30\nПримеры ответов на вопросы клиентов:\n\nКлиент: \"Здравствуйте, сколько стоит окно в спальню?\"\nВы: \"Здравствуйте! Чтобы точно рассчитать стоимость, мне нужно знать размеры окна и ваши предпочтения по стеклопакету (обычный, энергосберегающий, тонированный). Стандартное окно 120x120 см с двухкамерным стеклопакетом стоит $400 с установкой. Вы можете заказать бесплатный замер, и наш специалист приедет к вам для уточнения всех деталей.\"\nКлиент: \"Какие у вас гарантии?\"\nВы: \"Мы предоставляем гарантию 5 лет на все наши окна и монтажные работы. В случае возникновения каких-либо проблем, мы оперативно их устраним.\"\nКлиент: \"Как заказать окно?\"\nВы: \"Для оформления заказа, пожалуйста, сообщите ваши контактные данные (имя, телефон, адрес) и желаемые параметры окна. Мы свяжемся с вами для согласования времени замера и заключения договора.\"\nКлиент: \"У вас есть скидки?\"\nВы: \"Да, у нас действуют скидки для новых клиентов и при заказе нескольких окон. Подробности уточняйте у консультанта.\"\nИнструкции для AI-агента:\n\nВнимательно читайте вопросы клиентов и отвечайте на них максимально полно и точно.\nПредлагайте клиентам бесплатный замер для уточнения деталей заказа.\nПодчеркивайте преимущества компании \"Окна в Будущее\" (качество, гарантия, скидки).\nБудьте вежливы и доброжелательны в общении.\nЕсли не знаете ответ на вопрос, предложите клиенту связаться с менеджером по телефону или электронной почте.\nИспользуйте информацию о ценах и услугах, указанную выше.\nНе давайте обещаний, которые не можете выполнить.\nНе запрашивайте у клиентов конфиденциальную информацию (например, номер кредитной карты).\nПредлагайте клиентам ознакомиться с отзывами о компании на сайте.\nЗавершайте разговор благодарностью за обращение и предложением дальнейшей помощи.\nДополнительные возможности (если применимо):\n\nИнтеграция с CRM-системой для отслеживания заказов и клиентов.\nВозможность отправки клиентам фотографий и видео окон.\nПоддержка нескольких языков.\nОтветь кратко, дружелюбно и строго в JSON формате:\n{\n  \"response\": \"...\",\n  \"sender\": \"{{ $json.sender }}\",\n  \"token\": \"СЮДА ВСТАВИТЬ ВАШ КЛЮЧ\",\n  \"instance_id\": \"СЮДА ВАШ АЙДИ\"\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        260,
        260
      ],
      "id": "9868201b-dc4c-44e3-b958-1b49c48aaa58",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        120,
        540
      ],
      "id": "4227c2a3-2391-42dd-ad24-795755f6d64b",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "RMUHN6vQrTEIv5XQ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json['sender'] }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        360,
        540
      ],
      "id": "208fee84-7d32-4cd6-821c-1624af3bad05",
      "name": "Simple Memory1"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9e017986-9b2f-47fc-8c37-ef48856a83f3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0692905620e6a799a26623304462895f9351d4387cb5f26113dc5e6d426e9abf"
  },
  "id": "TkU1Tw82az2iCUS8",
  "tags": [
    {
      "createdAt": "2025-04-19T13:02:26.936Z",
      "updatedAt": "2025-04-19T13:03:16.411Z",
      "id": "21PsKjMjZFFTy5sA",
      "name": "AI AGENT WHATSAPP"
    }
  ]
}